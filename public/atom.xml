<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rachel</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-21T09:26:11.968Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Rachel</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript模式</title>
    <link href="http://yoursite.com/2019/03/21/Javascript%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/03/21/Javascript模式/</id>
    <published>2019-03-21T09:25:37.000Z</published>
    <updated>2019-03-21T09:26:11.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Universe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//缓存实例</span></span><br><span class="line">    <span class="keyword">var</span> instance;</span><br><span class="line">    <span class="comment">//重写构造函数</span></span><br><span class="line">    Universe = <span class="function"><span class="keyword">function</span> <span class="title">Universe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//保留原型属性</span></span><br><span class="line">    Universe.prototype = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">//实例</span></span><br><span class="line">    instance = <span class="keyword">new</span> Universe();</span><br><span class="line">    <span class="comment">//重置构造函数指针</span></span><br><span class="line">    instance.constructor = Universe;</span><br><span class="line">    <span class="comment">//所有功能</span></span><br><span class="line">    instance. start_time =<span class="number">0</span>;</span><br><span class="line">    instance.bang = <span class="string">"Big"</span>;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="另一种写法"><a href="#另一种写法" class="headerlink" title="另一种写法"></a>另一种写法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Universe;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> instance;</span><br><span class="line">    Universe = <span class="function"><span class="keyword">function</span> <span class="title">Universe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (instance) &#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">      &#125;</span><br><span class="line">      instance = <span class="keyword">this</span>;</span><br><span class="line">    </span><br><span class="line">      <span class="keyword">this</span>.start_time = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">this</span>.bang = <span class="string">"Big"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure><h3 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CarMaker</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"><span class="comment">// a method of the parent</span></span><br><span class="line">CarMaker.prototype.drive = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"Vroom, I have "</span> + <span class="keyword">this</span>.doors + <span class="string">" doors"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//静态工厂方法</span></span><br><span class="line">CarMaker.factory = <span class="function"><span class="keyword">function</span> (<span class="params">type</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> constr = type,</span><br><span class="line">  newcar;</span><br><span class="line"><span class="comment">//如果构造函数不存在,则发生错误</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> CarMaker[constr] !== <span class="string">"function"</span>) &#123;</span><br><span class="line">  <span class="keyword">throw</span> &#123;</span><br><span class="line">    name: <span class="string">"Error"</span>,</span><br><span class="line">    message: constr + <span class="string">"doesn’t exist"</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> CarMaker[constr].prototype.drive !== <span class="string">"function"</span>) &#123;</span><br><span class="line">  CarMaker[constr].prototype = <span class="keyword">new</span> CarMaker();</span><br><span class="line">&#125;</span><br><span class="line">newcar = <span class="keyword">new</span> CarMaker[constr]();</span><br><span class="line">  <span class="keyword">return</span> newcar;</span><br><span class="line">&#125;;</span><br><span class="line">CarMaker.Compact = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.doors = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line">CarMaker.Convertible = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.doors = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">CarMaker.SUV = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.doors = <span class="number">24</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="迭代模式"><a href="#迭代模式" class="headerlink" title="迭代模式"></a>迭代模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> agg = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="number">0</span>,</span><br><span class="line">      data = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">      length = data.length;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      next: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> element;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.hasNext()) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        element = data[index];</span><br><span class="line">        index = index + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> element;</span><br><span class="line">      &#125;,</span><br><span class="line">      hasNext: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index &lt; length;</span><br><span class="line">      &#125;,</span><br><span class="line">      rewind: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        index = <span class="number">0</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      current: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure><h3 id="装饰器模式"><a href="#装饰器模式" class="headerlink" title="装饰器模式"></a>装饰器模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sale</span>(<span class="params">price</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.price = price || <span class="number">100</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Sale.prototype.getPrice = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.price;</span><br><span class="line">  &#125;</span><br><span class="line">  Sale.decorators = &#123;&#125;;</span><br><span class="line">  Sale.decorators.fedtax = &#123;</span><br><span class="line">    getPrice: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> price = <span class="keyword">this</span>.uber.getPrice();</span><br><span class="line">      price += price * <span class="number">5</span> / <span class="number">100</span>;</span><br><span class="line">      <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  Sale.decorators.quebec = &#123;</span><br><span class="line">    getPrice: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> price = <span class="keyword">this</span>.uber.getPrice();</span><br><span class="line">      price += price * <span class="number">7.5</span> / <span class="number">100</span>;</span><br><span class="line">      <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  Sale.decorators.money = &#123;</span><br><span class="line">    getPrice: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"$"</span> + <span class="keyword">this</span>.uber.getPrice().toFixed(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  Sale.decorators.cdn = &#123;</span><br><span class="line">    getPrice: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"CDN$ "</span> + <span class="keyword">this</span>.uber.getPrice().toFixed(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  Sale.prototype.decorate = <span class="function"><span class="keyword">function</span>(<span class="params">decorator</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">      overrides = <span class="keyword">this</span>.constructor.decorators[decorator],</span><br><span class="line">      i, newobj;</span><br><span class="line">    F.prototype = <span class="keyword">this</span>;</span><br><span class="line">    newobj = <span class="keyword">new</span> F();</span><br><span class="line">    newobj.uber = F.prototype;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> overrides) &#123;</span><br><span class="line">      <span class="keyword">if</span> (overrides.hasOwnProperty(i)) &#123;</span><br><span class="line">        newobj[i] = overrides[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newobj;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> validator = &#123;</span><br><span class="line">    types: &#123;&#125;,</span><br><span class="line">    messages: [],</span><br><span class="line">    config: &#123;&#125;,</span><br><span class="line">    validate: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> i, msg, type, checker, result_ok;</span><br><span class="line">      <span class="keyword">this</span>.messages = [];</span><br><span class="line">      <span class="keyword">for</span> (i <span class="keyword">in</span> data) &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.hasOwnProperty(i)) &#123;</span><br><span class="line">          type = <span class="keyword">this</span>.config[i];</span><br><span class="line">          checker = <span class="keyword">this</span>.types[type];</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(!type) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (!checker) &#123;</span><br><span class="line">            <span class="keyword">throw</span> &#123;</span><br><span class="line">              name: <span class="string">"ValidationError"</span>,</span><br><span class="line">              messages: <span class="string">"No handler to validate type "</span> + type</span><br><span class="line">            &#125;;</span><br><span class="line">          &#125;</span><br><span class="line">          result_ok = checker.validate(data[i]);</span><br><span class="line">          <span class="keyword">if</span> (!result_ok) &#123;</span><br><span class="line">            msg = <span class="string">"Invalid value for *"</span> + i + <span class="string">"*, "</span> + checker.instructions;</span><br><span class="line">            <span class="keyword">this</span>.messages.push(msg);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.hasErrors();</span><br><span class="line">    &#125;,</span><br><span class="line">    hasErrors() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.messages.length !== <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  validator.types.isNonEmpty = &#123;</span><br><span class="line">    validate: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> value !== <span class="string">""</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    instructions: <span class="string">"the value cannot be empty"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  validator.types.isNumber = &#123;</span><br><span class="line">    validate: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> !<span class="built_in">isNaN</span>(value);</span><br><span class="line">    &#125;,</span><br><span class="line">    instructions: <span class="string">"the value can only be a valid number, e.g. 1, 3.14 or 2010"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  validator.types.isAlphaNum = &#123;</span><br><span class="line">    validate: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> !<span class="regexp">/[^a-z0-9]/i</span>.test(value);</span><br><span class="line">    &#125;,</span><br><span class="line">    instructions: <span class="string">"the value can only contain characters and numbers, no special symbols"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  validator.config = &#123;</span><br><span class="line">    first_name: <span class="string">"isNonEmpty"</span>,</span><br><span class="line">    age: <span class="string">"isNumber"</span>,</span><br><span class="line">    username: <span class="string">"isAlphaNum"</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> data = &#123;</span><br><span class="line">    first_name: <span class="string">"super"</span>,</span><br><span class="line">    last_name: <span class="string">"Man"</span>,</span><br><span class="line">    age: <span class="string">"unknown"</span>,</span><br><span class="line">    username: <span class="string">"o_0"</span></span><br><span class="line">  &#125;</span><br><span class="line">  validator.validate(data);</span><br><span class="line">  <span class="keyword">if</span> (validator.hasErrors()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(validator.messages.join(<span class="string">"\n"</span>));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a>外观模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myevent = &#123;</span><br><span class="line">  stop: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> e.preventDefault === <span class="string">'function'</span>) &#123;</span><br><span class="line">      e.preventDefault();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> e.stopPropagation === <span class="string">'function'</span>) &#123;</span><br><span class="line">      e.stopPropagation();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> e.returnValue === <span class="string">'boolean'</span>) &#123;</span><br><span class="line">      e.returnValue = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> e.cancelBubble === <span class="string">'boolean'</span>) &#123;</span><br><span class="line">      e.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h3><blockquote><p>作用：合并多个请求</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> proxy = &#123;</span><br><span class="line">  ids: [],</span><br><span class="line">  delay: <span class="number">50</span>,</span><br><span class="line">  timeout: <span class="literal">null</span>,</span><br><span class="line">  callback: <span class="literal">null</span>,</span><br><span class="line">  context: <span class="literal">null</span>,</span><br><span class="line">  makeRequest: <span class="function"><span class="keyword">function</span>(<span class="params">id, callback, context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ids.push(id);</span><br><span class="line">    <span class="keyword">this</span>.callback = callback;</span><br><span class="line">    <span class="keyword">this</span>.context = context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.timeout) &#123;</span><br><span class="line">      <span class="keyword">this</span>.timeout = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        proxy.flush();</span><br><span class="line">      &#125;, <span class="keyword">this</span>.delay);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  flush: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    http.makeRequest(<span class="keyword">this</span>.ids, <span class="string">"proxy.handler"</span>);</span><br><span class="line">    <span class="keyword">this</span>.timeout = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">this</span>.ids = [];</span><br><span class="line">  &#125;,</span><br><span class="line">  handler: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i, max;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(data.query.count, <span class="number">10</span>) === <span class="number">1</span>) &#123;</span><br><span class="line">      proxy.callback.call(proxy.context, data.query.results.Video);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, max = data.query.results.Video.length; i &lt; max; i += <span class="number">1</span>) &#123;</span><br><span class="line">      proxy.callback.call(proxy.context, data.query.results.Video[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="中介者模式"><a href="#中介者模式" class="headerlink" title="中介者模式"></a>中介者模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// player constructor</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Player</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.points = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// play method</span></span><br><span class="line">Player.prototype.play = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.points += <span class="number">1</span>;</span><br><span class="line">    mediator.played();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// the scoreboard object</span></span><br><span class="line"><span class="keyword">var</span> scoreboard = &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// HTML element to be updated</span></span><br><span class="line">    element: <span class="built_in">document</span>.getElementById(<span class="string">'results'</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// update the score display</span></span><br><span class="line">    update: <span class="function"><span class="keyword">function</span> (<span class="params">score</span>) </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> i, msg = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> score) &#123;</span><br><span class="line">            <span class="keyword">if</span> (score.hasOwnProperty(i)) &#123;</span><br><span class="line">                msg += <span class="string">'&lt;p&gt;&lt;strong&gt;'</span> + i + <span class="string">'&lt;\/strong&gt;: '</span>;</span><br><span class="line">                msg += score[i];</span><br><span class="line">                msg += <span class="string">'&lt;\/p&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.element.innerHTML = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mediator = &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// all the players</span></span><br><span class="line">    players: &#123;&#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    setup: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> players = <span class="keyword">this</span>.players;</span><br><span class="line">        players.home = <span class="keyword">new</span> Player(<span class="string">'Home'</span>);</span><br><span class="line">        players.guest = <span class="keyword">new</span> Player(<span class="string">'Guest'</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// someone plays, update the score</span></span><br><span class="line">    played: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> players = <span class="keyword">this</span>.players,</span><br><span class="line">            score = &#123;</span><br><span class="line">                Home:  players.home.points,</span><br><span class="line">                Guest: players.guest.points</span><br><span class="line">            &#125;;</span><br><span class="line">            </span><br><span class="line">        scoreboard.update(score);</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// handle user interactions</span></span><br><span class="line">    keypress: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e = e || <span class="built_in">window</span>.event; <span class="comment">// IE</span></span><br><span class="line">        <span class="keyword">if</span> (e.which === <span class="number">49</span>) &#123; <span class="comment">// key "1"</span></span><br><span class="line">            mediator.players.home.play();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (e.which === <span class="number">48</span>) &#123; <span class="comment">// key "0"</span></span><br><span class="line">            mediator.players.guest.play();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// go!</span></span><br><span class="line">mediator.setup();</span><br><span class="line"><span class="built_in">window</span>.onkeypress = mediator.keypress;</span><br><span class="line"></span><br><span class="line"><span class="comment">// game over in 30 seconds</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.onkeypress = <span class="literal">null</span>;</span><br><span class="line">    alert(<span class="string">'Game over!'</span>);</span><br><span class="line">&#125;, <span class="number">30000</span>);</span><br></pre></td></tr></table></figure><h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> publisher = &#123;</span><br><span class="line">    subscribers: &#123;</span><br><span class="line">        any: [] <span class="comment">// event type: subscribers</span></span><br><span class="line">    &#125;,</span><br><span class="line">    subscribe: <span class="function"><span class="keyword">function</span> (<span class="params">fn, type</span>) </span>&#123;</span><br><span class="line">        type = type || <span class="string">'any'</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>.subscribers[type] === <span class="string">"undefined"</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.subscribers[type] = [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.subscribers[type].push(fn);</span><br><span class="line">    &#125;,</span><br><span class="line">    unsubscribe: <span class="function"><span class="keyword">function</span> (<span class="params">fn, type</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.visitSubscribers(<span class="string">'unsubscribe'</span>, fn, type);</span><br><span class="line">    &#125;,</span><br><span class="line">    publish: <span class="function"><span class="keyword">function</span> (<span class="params">publication, type</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.visitSubscribers(<span class="string">'publish'</span>, publication, type);</span><br><span class="line">    &#125;,</span><br><span class="line">    visitSubscribers: <span class="function"><span class="keyword">function</span> (<span class="params">action, arg, type</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pubtype = type || <span class="string">'any'</span>,</span><br><span class="line">            subscribers = <span class="keyword">this</span>.subscribers[pubtype],</span><br><span class="line">            i,</span><br><span class="line">            max = subscribers.length;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; max; i += <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (action === <span class="string">'publish'</span>) &#123;</span><br><span class="line">                subscribers[i](arg);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (subscribers[i] === arg) &#123;</span><br><span class="line">                    subscribers.splice(i, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">var s1 = &#123;log: console.log&#125;,</span></span><br><span class="line"><span class="comment">    s2 = &#123;err: console.error&#125;,</span></span><br><span class="line"><span class="comment">    s3 = &#123;warn: console.warn&#125;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">publisher.subscribe(s1.log);</span></span><br><span class="line"><span class="comment">publisher.subscribe(s2.err);</span></span><br><span class="line"><span class="comment">publisher.subscribe(s3.warn);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">publisher.publish(&#123;hello: "World"&#125;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">publisher.unsubscribe(s2.err);</span></span><br><span class="line"><span class="comment">publisher.publish("hello");</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">publisher.subscribe(s1.log, "log");</span></span><br><span class="line"><span class="comment">publisher.publish(&#123;obj: "log this object"&#125;, "log");</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makePublisher</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> publisher) &#123;</span><br><span class="line">        <span class="keyword">if</span> (publisher.hasOwnProperty(i) &amp;&amp; <span class="keyword">typeof</span> publisher[i] === <span class="string">"function"</span>) &#123;</span><br><span class="line">            o[i] = publisher[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    o.subscribers = &#123;<span class="attr">any</span>: []&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> paper = &#123;</span><br><span class="line">    daily: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.publish(<span class="string">"big news today"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    monthly: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.publish(<span class="string">"interesting analysis"</span>, <span class="string">"monthly"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">makePublisher(paper);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> joe = &#123;</span><br><span class="line">    drinkCoffee: <span class="function"><span class="keyword">function</span> (<span class="params">paper</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Just read '</span> + paper);</span><br><span class="line">    &#125;,</span><br><span class="line">    sundayPreNap: <span class="function"><span class="keyword">function</span> (<span class="params">monthly</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'About to fall asleep reading this '</span> + monthly);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">paper.subscribe(joe.drinkCoffee);</span><br><span class="line">paper.subscribe(joe.sundayPreNap, <span class="string">'monthly'</span>);</span><br><span class="line"></span><br><span class="line">paper.daily();</span><br><span class="line">paper.daily();</span><br><span class="line">paper.daily();</span><br><span class="line">paper.monthly();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">makePublisher(joe);</span><br><span class="line"></span><br><span class="line">joe.tweet = <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.publish(msg);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">paper.readTweets = <span class="function"><span class="keyword">function</span> (<span class="params">tweet</span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'Call big meeting! Someone '</span> + tweet);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">joe.subscribe(paper.readTweets);</span><br><span class="line"></span><br><span class="line">joe.tweet(<span class="string">"hated the paper today"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> publisher = &#123;</span><br><span class="line">    subscribers: &#123;</span><br><span class="line">        any: []</span><br><span class="line">    &#125;,</span><br><span class="line">    on: <span class="function"><span class="keyword">function</span> (<span class="params">type, fn, context</span>) </span>&#123;</span><br><span class="line">        type = type || <span class="string">'any'</span>;</span><br><span class="line">        fn = <span class="keyword">typeof</span> fn === <span class="string">"function"</span> ? fn : context[fn];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>.subscribers[type] === <span class="string">"undefined"</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.subscribers[type] = [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.subscribers[type].push(&#123;<span class="attr">fn</span>: fn, <span class="attr">context</span>: context || <span class="keyword">this</span>&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    remove: <span class="function"><span class="keyword">function</span> (<span class="params">type, fn, context</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.visitSubscribers(<span class="string">'unsubscribe'</span>, type, fn, context);</span><br><span class="line">    &#125;,</span><br><span class="line">    fire: <span class="function"><span class="keyword">function</span> (<span class="params">type, publication</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.visitSubscribers(<span class="string">'publish'</span>, type, publication);</span><br><span class="line">    &#125;,</span><br><span class="line">    visitSubscribers: <span class="function"><span class="keyword">function</span> (<span class="params">action, type, arg, context</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> pubtype = type || <span class="string">'any'</span>,</span><br><span class="line">            subscribers = <span class="keyword">this</span>.subscribers[pubtype],</span><br><span class="line">            i,</span><br><span class="line">            max = subscribers ? subscribers.length : <span class="number">0</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; max; i += <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (action === <span class="string">'publish'</span>) &#123;</span><br><span class="line">                subscribers[i].fn.call(subscribers[i].context, arg);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (subscribers[i].fn === arg &amp;&amp; subscribers[i].context === context) &#123;</span><br><span class="line">                    subscribers.splice(i, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makePublisher</span>(<span class="params">o</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> publisher) &#123;</span><br><span class="line">        <span class="keyword">if</span> (publisher.hasOwnProperty(i) &amp;&amp; <span class="keyword">typeof</span> publisher[i] === <span class="string">"function"</span>) &#123;</span><br><span class="line">            o[i] = publisher[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    o.subscribers = &#123;<span class="attr">any</span>: []&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> game = &#123;</span><br><span class="line">    </span><br><span class="line">    keys: &#123;&#125;,</span><br><span class="line"></span><br><span class="line">    addPlayer: <span class="function"><span class="keyword">function</span> (<span class="params">player</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> key = player.key.toString().charCodeAt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">this</span>.keys[key] = player;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    handleKeypress: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e = e || <span class="built_in">window</span>.event; <span class="comment">// IE</span></span><br><span class="line">        <span class="keyword">if</span> (game.keys[e.which]) &#123;</span><br><span class="line">            game.keys[e.which].play();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handlePlay: <span class="function"><span class="keyword">function</span> (<span class="params">player</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i, </span><br><span class="line">            players = <span class="keyword">this</span>.keys,</span><br><span class="line">            score = &#123;&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> players) &#123;</span><br><span class="line">            <span class="keyword">if</span> (players.hasOwnProperty(i)) &#123;</span><br><span class="line">                score[players[i].name] = players[i].points;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.fire(<span class="string">'scorechange'</span>, score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Player</span>(<span class="params">name, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.points = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.key  = key;</span><br><span class="line">    <span class="keyword">this</span>.fire(<span class="string">'newplayer'</span>, <span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Player.prototype.play = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.points += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.fire(<span class="string">'play'</span>, <span class="keyword">this</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> scoreboard = &#123;</span><br><span class="line">    </span><br><span class="line">    element: <span class="built_in">document</span>.getElementById(<span class="string">'results'</span>),</span><br><span class="line">    </span><br><span class="line">    update: <span class="function"><span class="keyword">function</span> (<span class="params">score</span>) </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> i, msg = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> score) &#123;</span><br><span class="line">            <span class="keyword">if</span> (score.hasOwnProperty(i)) &#123;</span><br><span class="line">                msg += <span class="string">'&lt;p&gt;&lt;strong&gt;'</span> + i + <span class="string">'&lt;\/strong&gt;: '</span>;</span><br><span class="line">                msg += score[i];</span><br><span class="line">                msg += <span class="string">'&lt;\/p&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.element.innerHTML = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">makePublisher(Player.prototype);</span><br><span class="line">makePublisher(game);</span><br><span class="line"></span><br><span class="line">Player.prototype.on(<span class="string">"newplayer"</span>, <span class="string">"addPlayer"</span>, game);</span><br><span class="line">Player.prototype.on(<span class="string">"play"</span>,      <span class="string">"handlePlay"</span>, game);</span><br><span class="line"></span><br><span class="line">game.on(<span class="string">"scorechange"</span>, scoreboard.update, scoreboard);</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onkeypress = game.handleKeypress;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> playername, key;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    playername = prompt(<span class="string">"Add player (name)"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!playername) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        key = prompt(<span class="string">"Key for "</span> + playername + <span class="string">"?"</span>);</span><br><span class="line">        <span class="keyword">if</span> (key) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">new</span> Player(playername,  key);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="web前端" scheme="http://yoursite.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>《React设计模式与最佳实践》笔记</title>
    <link href="http://yoursite.com/2019/03/21/%E3%80%8AReact%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/03/21/《React设计模式与最佳实践》笔记/</id>
    <published>2019-03-21T09:07:54.000Z</published>
    <updated>2019-03-21T09:12:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>书里的demo都是15.3.2以下版本的，有些demo用最新的react 16.x版本会报错，安装包的时候记得改一下版本</p><h3 id="第一章-React-基础"><a href="#第一章-React-基础" class="headerlink" title="第一章 React 基础"></a>第一章 React 基础</h3><p>命令式编程描述代码如何工作，而声明式编程则表明想要实现什么目的</p><h3 id="第二章-整理代码"><a href="#第二章-整理代码" class="headerlink" title="第二章 整理代码"></a>第二章 整理代码</h3><p>展开属性操作符也是一项很重要的特性<br>{…props}</p><p>常见模式</p><ol><li>多行书写</li><li>多个属性的书写</li><li>条件语句<br>render-if包</li><li>循环<br>map</li><li>控制语句<br>jsx-control-statements</li><li>次级渲染<br>拆分组件</li></ol><p>ESLint<br>.eslintrc 文件<br>插件 eslint-plugin-react eslint-config-airbnb eslint@^2.9.0 eslint-pluginjsx-a11y@^1.2.0 eslint-plugin-import@^1.7.0 eslint-plugin-react@^5.0.1</p><p>函数式编程基础<br>纯粹函数是指它不产生副作用，也就是说它不会改变自身作用域以外的任何东西。<br>函数不会修改变量值，而是创建新的变量，赋新值后再返回变量。操作数据的这种方式称为不可变性。<br>柯里化<br>函数（和组件）可以结合产生新函数，从而提供更高级的功能与属性。</p><h3 id="第三章-开发真正可复用的组件"><a href="#第三章-开发真正可复用的组件" class="headerlink" title="第三章 开发真正可复用的组件"></a>第三章 开发真正可复用的组件</h3><p>1.props<br>2.state<br>解决函数绑定问题的最佳方案是在构造器内进行绑定操作，这样即使多次渲染组件，它也不会发生任何改变。<br>3.无状态函数式组件,没有state<br>this 在无状态函数式组件的执行过程中不指向组件本身。<br>无状态函数式组件只接收props（以及上下文）参数，并返回相应元素。<br>没有提供任何像componentDidMount 这样的生命周期钩子<br>setState 方法是异步的<br>propTypes，类型校验</p><p>可复用组件<br>react-docgen</p><p>可用的风格指南<br>react-storybook 包：@kadira/react-storybook-addon-info</p><h3 id="第四章-组合一切"><a href="#第四章-组合一切" class="headerlink" title="第四章 组合一切"></a>第四章 组合一切</h3><p>4.1 组件间的通信<br>props<br>children 是一个特殊的prop，拥有者组件可以将它传递给渲染方法内定义的组件。</p><p>4.2 容器组件与表现组件模式<br>容器组件：</p><ul><li>更关心行为部分；</li><li>负责渲染对应的表现组件；</li><li>发起API 请求并操作数据；</li><li>定义事件处理器；</li><li>写作类的形式。</li></ul><p>表现组件：</p><ul><li>更关心视觉表现；</li><li>负责渲染HTML 标记（或其他组件）；</li><li>以props 的形式从父组件接收数据；</li><li>通常写作无状态函数式组件。</li></ul><p>4.3 mixin<br>mixin 只能和createClass 工厂方法搭配使用</p><p>4.4 高阶组件<br>高阶组件其实就是函数，它接收组件作为参数，对组件进行增强后返回。</p><p>4.5 recompose<br>context 16.x有了很大的更改</p><p>4.6 函数子组件<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Name = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> children(<span class="string">'World'</span>)</span><br><span class="line">Name.propTypes = &#123;</span><br><span class="line">hildren: React.PropTypes.func.isRequired,</span><br><span class="line">&#125;</span><br><span class="line">&lt;Name&gt;</span><br><span class="line">&#123;name =&gt; &lt;div&gt;Hello, &#123;name&#125;!&lt;/div&gt;&#125;</span><br><span class="line">&lt;<span class="regexp">/Name&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="第五章-恰当地获取数据"><a href="#第五章-恰当地获取数据" class="headerlink" title="第五章 恰当地获取数据"></a>第五章 恰当地获取数据</h3><p>5.1 数据流<br>单向数据流<br>5.1.1 子组件与父组件的通信（回调函数）<br>每当子组件需要向父组件推送数据或者通知父组件发生了某个事件时，可以传递回调函数，同时将其余逻辑放在父组件中。</p><p>5.2 数据获取<br>用于获取数据的代码可以放在两个生命周期钩子中：componentWillMount 和component-DidMount。</p><p>5.3 react-refetch</p><h3 id="第六章-为浏览器编写代码"><a href="#第六章-为浏览器编写代码" class="headerlink" title="第六章 为浏览器编写代码"></a>第六章 为浏览器编写代码</h3><p>6.1 表单<br>6.1.1 自由组件<br>6.1.2 受控组件<br>6.1.3 JSON schema<br>react-jsonschema-form</p><p>6.2 事件<br><a href="http://reactpatterns.com/#event-switch" target="_blank" rel="noopener">http://reactpatterns.com/#event-switch</a><br>命名事件处理器函数的最流行做法就是事件名前加上handle 前缀（如handleKeyDown）。<br>如果需要为同一个组件创建新的事件处理器，无须创建新的方法并绑定，只要在switch 语句中增加一个事例即可。<br>React 实际做的是在根元素上添加单个事件处理器，由于事件冒泡机制，这个处理器会监听所有事件。当浏览器触发我们想要的事件时，React 会代表相应组件调用处理器。这个技巧称作事件代理，可以优化内存和速度。</p><p>6.3 ref<br>表单用得多</p><p>6.4 动画<br>react-addons-css-transition-group react-motion</p><h3 id="第七章-美化组件"><a href="#第七章-美化组件" class="headerlink" title="第七章 美化组件"></a>第七章 美化组件</h3><p>7.1 CSS in JavaScript<br>7.2 行内样式<br>7.3 Radium<br>7.4 CSS 模块<br>react-css-modules<br>!! 7.5 Styled Component<br>这个库的另一项绝佳特性是主题。将组件封装在ThemeProvider 组件中，可以为组件树注入主题属性，当要和其他组件共享一部分样式，剩下部分取决于当前选中主题时，创建UI 会变得非常方便。</p><h3 id="第八章-服务端渲染的乐趣与益处"><a href="#第八章-服务端渲染的乐趣与益处" class="headerlink" title="第八章 服务端渲染的乐趣与益处"></a>第八章 服务端渲染的乐趣与益处</h3><p>8.1 通用应用<br>同构应用就是指应用在服务端和客户端看起来一模一样。</p><p>8.2 使用服务端渲染的原因<br>8.2.1 SEO<br>8.2.2 通用代码库<br>8.2.3 性能更强<br>8.2.4 不要低估复杂度</p><p>8.5 Next.js</p><h3 id="第九章-提升应用性能"><a href="#第九章-提升应用性能" class="headerlink" title="第九章 提升应用性能"></a>第九章 提升应用性能</h3><p>9.1 一致性比较与key 属性，key要唯一的</p><p>9.2 优化手段<br>shouldComponentUpdate<br>它的用法很直观，创建组件类时继承React.PureComponent 来代替React.Component即可。<br>9.2.2 无状态函数式组件</p><p>9.3 常用解决方案<br>9.3.1 why-did-you-update 好像没有用了<br>9.3.2 在渲染方法中创建函数<br>9.3.3 props 常量<br>9.3.4 重构与良好设计</p><p>9.4 工具与库<br>immutable.js</p><p>9.4.2 性能监控工具<br>chrome-react-perf<br>react-perf-tool</p><p>9.4.3 Babel 插件<br>babel-plugin-transform-react-inline-elements</p><h3 id="第十章-测试与调试"><a href="#第十章-测试与调试" class="headerlink" title="第十章 测试与调试"></a>第十章 测试与调试</h3><p>Jest<br>Mocha<br>TestUtils 和Enzyme</p><p>测试React 组件的方式一般有两种：<br>浅渲染；<br>将组件挂载到独立DOM中。</p><p>10.8 常用测试方案<br>10.8.1 测试高阶组件<br>10.8.2 页面对象模式</p><p>10.10 React 错误处理<br>react-component-errors</p><h3 id="第十一章-需要避免的反模式"><a href="#第十一章-需要避免的反模式" class="headerlink" title="第十一章 需要避免的反模式"></a>第十一章 需要避免的反模式</h3><p>11.1 用prop 初始化状态<br>如果我们真的想要用属性值初始化组件，并且可以肯定这些值未来不会改变呢？<br>这种情况下，最好阐明这种做法的用意，并为属性起一个能清楚表达含义的名称</p><p>11.2 修改状态<br>首先，如果不通过setState 修改状态，则会出现两种糟糕的情况：<br> 状态改变不会触发组件重渲染；<br> 以后无论何时调用setState，之前修改的状态都会渲染到页面上。</p><p>11.3 将数组索引作为key</p><p>11.4 在DOM 元素上展开props 对象</p><h3 id="第十二章-未来的行动"><a href="#第十二章-未来的行动" class="headerlink" title="第十二章 未来的行动"></a>第十二章 未来的行动</h3><p>12.3 发布npm 包<br>npm publish</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;书里的demo都是15.3.2以下版本的，有些demo用最新的react 16.x版本会报错，安装包的时候记得改一下版本&lt;/p&gt;
&lt;h3 id=&quot;第一章-React-基础&quot;&gt;&lt;a href=&quot;#第一章-React-基础&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="web前端" scheme="http://yoursite.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>js排序算法-快速排序</title>
    <link href="http://yoursite.com/2019/03/21/js%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2019/03/21/js排序算法-快速排序/</id>
    <published>2019-03-21T08:20:22.000Z</published>
    <updated>2019-03-21T08:34:31.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><h3 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h3><p> (1) 首先，从数组中选择中间一项作为主元。</p><p> (2) 创建两个指针，左边一个指向数组第一个项，右边一个指向数组最后一个项。移动左指针直到我们找到一个比主元大的元素，接着，移动右指针直到找到一个比主元小的元素，然后交</p><p>换它们，重复这个过程，直到左指针超过了右指针。这个过程将使得比主元小的值都排在主元之前，而比主元大的值都排在主元之后。这一步叫作划分操作。</p><p> (3) 接着，算法对划分后的小数组（较主元小的值组成的子数组，以及较主元大的值组成的子数组）重复之前的两个步骤，直至数组已完全排序。</p><p>复杂度为：O(nlogn)</p><p>代码实现：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> quickSort = <span class="function"><span class="keyword">function</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line"> quick(array, <span class="number">0</span>, array.length - <span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> swap = <span class="function"><span class="keyword">function</span>(<span class="params">array, index1, index2</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> aux = array[index1];</span><br><span class="line">  array[index1] = array[index2];</span><br><span class="line">  array[index2] = aux;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> quick = <span class="function"><span class="keyword">function</span>(<span class="params">array, left, right</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> index; <span class="comment">//&#123;1&#125;</span></span><br><span class="line">  <span class="keyword">if</span> (array.length &gt; <span class="number">1</span>) &#123; <span class="comment">//&#123;2&#125;</span></span><br><span class="line">    index = partition(array, left, right); <span class="comment">//&#123;3&#125;partition函数返回值将赋值给index</span></span><br><span class="line">    <span class="keyword">if</span> (left &lt; index - <span class="number">1</span>) &#123; <span class="comment">//&#123;4&#125;如果子数组存在较小值的元素</span></span><br><span class="line">      quick(array, left, index - <span class="number">1</span>); <span class="comment">//&#123;5&#125;则对该数组重复这个过程</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; right) &#123; <span class="comment">//&#123;6&#125;</span></span><br><span class="line">      quick(array, index, right); <span class="comment">//&#123;7&#125;如果存在子数组存在较大值，我们也将重复快速排序过程</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> partition = <span class="function"><span class="keyword">function</span>(<span class="params">array, left, right</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> pivot = array[<span class="built_in">Math</span>.floor((right + left) / <span class="number">2</span>)], <span class="comment">//&#123;8&#125;我们选择中间项作为主元</span></span><br><span class="line">      i = left, <span class="comment">//&#123;9&#125;，初始化为数组第一个元素</span></span><br><span class="line">      j = right; <span class="comment">//&#123;10&#125;初始化为数组最后一个元素。</span></span><br><span class="line">  <span class="keyword">while</span> (i &lt;= j) &#123; <span class="comment">//&#123;11&#125;只要left和right指针没有相互交错</span></span><br><span class="line">    <span class="keyword">while</span> (array[i] &lt; pivot) &#123; <span class="comment">//&#123;12&#125;首先，移动left指针直到找到一个元素比主元大</span></span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (array[j] &gt; pivot) &#123; <span class="comment">//&#123;13&#125;对right指针，我们做同样的事情，移动right指针直到我们找到一个元素比主元小。</span></span><br><span class="line">      j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &lt;= j) &#123; <span class="comment">//&#123;14&#125;当左指针指向的元素比主元大且右指针指向的元素比主元小，并且此时左指针索引没有右指针索引大</span></span><br><span class="line">      swap(array, i, j); <span class="comment">//&#123;15&#125;我们交换它们，然后移动两个指针，并重复此过程</span></span><br><span class="line">      i++;</span><br><span class="line">      j--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> i; <span class="comment">//&#123;16&#125;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> array = [<span class="number">3</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>];</span><br><span class="line">quickSort(array);</span><br><span class="line"><span class="built_in">console</span>.log(array);<span class="comment">// [1, 2, 3, 4, 5, 6, 7]</span></span><br></pre></td></tr></table></figure><p> 可以点击下面链接进行查看：</p><p> See the Pen 快速排序 by rachel (@pprachel) on CodePen.</p><p>实现过程：<br><img src="https://img2018.cnblogs.com/blog/913399/201901/913399-20190115141107795-1431129836.png" alt="image"></p><p> 下面的示意图展示了对有较小值的子数组执行的划分操作（注意7 和6 不包含在子数组之内）：</p><p><img src="https://img2018.cnblogs.com/blog/913399/201901/913399-20190115141219930-1857660716.png" alt="image"></p><p> 接着，我们继续创建子数组，请看下图，但是这次操作是针对上图中有较大值的子数组（有1 的那个较小子数组不用再划分了，因为它仅含有一个项）。<br><img src="https://img2018.cnblogs.com/blog/913399/201901/913399-20190115141251219-149566665.png" alt="image"></p><p> 子数组（[2, 3, 5, 4] ）中的较小子数组（[2, 3] ）继续进行划分（算法代码中的行{5} ）：</p><p><img src="https://img2018.cnblogs.com/blog/913399/201901/913399-20190115141825771-794720346.png" alt="image"></p><p> 然后子数组（[2, 3, 5, 4] ）中的较大子数组（[5, 4] ）也继续进行划分（算法中的行{7} ），示意图如下：</p><p><img src="https://img2018.cnblogs.com/blog/913399/201901/913399-20190115141901800-1116729451.png" alt="image"></p><p> 最终，较大子数组[6, 7] 也会进行划分（partition ）操作，快速排序算法的操作执行完成。</p><p>可以通过下面这个网站看动态的过程：<a href="https://visualgo.net/zh/sorting" target="_blank" rel="noopener">https://visualgo.net/zh/sorting</a></p><p>优化：</p><p>1.即挑选基准元素时，先把第一个元素、最后一个元素和中间一个元素挑出来，这三个元素中大小在中间的那个元素就被认为是基准元素。<a href="https://www.jianshu.com/p/fc342a9ffb58" target="_blank" rel="noopener">https://www.jianshu.com/p/fc342a9ffb58</a></p><p>2.三路快排： <a href="https://www.jianshu.com/p/fc342a9ffb58" target="_blank" rel="noopener">https://www.jianshu.com/p/fc342a9ffb58</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h2&gt;&lt;h3 id=&quot;概念：&quot;&gt;&lt;a href=&quot;#概念：&quot; class=&quot;headerlink&quot; title=&quot;概念：&quot;&gt;&lt;/a&gt;概念
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>js设计模式</title>
    <link href="http://yoursite.com/2018/05/14/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/05/14/js设计模式/</id>
    <published>2018-05-14T15:25:11.000Z</published>
    <updated>2019-03-21T06:10:30.178Z</updated>
    
    <content type="html"><![CDATA[<h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eventProxy.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> eventProxy = &#123;</span><br><span class="line">  onObj: &#123;&#125;,</span><br><span class="line">  oneObj: &#123;&#125;,</span><br><span class="line">  on: <span class="function"><span class="keyword">function</span>(<span class="params">key, fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.onObj[key] === <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.onObj[key] = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.onObj[key].push(fn);</span><br><span class="line">  &#125;,</span><br><span class="line">  one: <span class="function"><span class="keyword">function</span>(<span class="params">key, fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.oneObj[key] === <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.oneObj[key] = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.oneObj[key].push(fn);</span><br><span class="line">  &#125;,</span><br><span class="line">  off: <span class="function"><span class="keyword">function</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.onObj[key] = [];</span><br><span class="line">    <span class="keyword">this</span>.oneObj[key] = [];</span><br><span class="line">  &#125;,</span><br><span class="line">  trigger: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> key, args;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">arguments</span>.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    key = <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line">    args = [].concat(<span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.onObj[key] !== <span class="literal">undefined</span></span><br><span class="line">      &amp;&amp; <span class="keyword">this</span>.onObj[key].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> <span class="keyword">this</span>.onObj[key]) &#123;</span><br><span class="line">        <span class="keyword">this</span>.onObj[key][i].apply(<span class="literal">null</span>, args);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.oneObj[key] !== <span class="literal">undefined</span></span><br><span class="line">      &amp;&amp; <span class="keyword">this</span>.oneObj[key].length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> <span class="keyword">this</span>.oneObj[key]) &#123;</span><br><span class="line">        <span class="keyword">this</span>.oneObj[key][i].apply(<span class="literal">null</span>, args);</span><br><span class="line">        <span class="keyword">this</span>.oneObj[key][i] = <span class="literal">undefined</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">this</span>.oneObj[key] = [];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> eventProxy;</span><br><span class="line">eventProxy.on(<span class="string">"city"</span>,(data) =&gt; &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">        city:data</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">eventProxy.trigger(<span class="string">"city"</span>,data)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;观察者模式&quot;&gt;&lt;a href=&quot;#观察者模式&quot; class=&quot;headerlink&quot; title=&quot;观察者模式&quot;&gt;&lt;/a&gt;观察者模式&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>思考总结</title>
    <link href="http://yoursite.com/2018/05/14/%E6%80%9D%E8%80%83%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/05/14/思考总结/</id>
    <published>2018-05-14T15:23:40.000Z</published>
    <updated>2018-12-04T07:44:15.361Z</updated>
    
    <content type="html"><![CDATA[<p>HOC<br>immutable</p><p>setState<br>PWA<br>SSR<br>性能优化<br>怎么让资源少</p><h4 id="怎么让key唯一，可以用数组的下标吗"><a href="#怎么让key唯一，可以用数组的下标吗" class="headerlink" title="怎么让key唯一，可以用数组的下标吗"></a>怎么让key唯一，可以用数组的下标吗</h4><p>不能用数组下标，因为对应的键值都会改变，也就会出现我们上面提到的组件key值被改变就会被当作新创建的组件处理那种情况</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HOC&lt;br&gt;immutable&lt;/p&gt;
&lt;p&gt;setState&lt;br&gt;PWA&lt;br&gt;SSR&lt;br&gt;性能优化&lt;br&gt;怎么让资源少&lt;/p&gt;
&lt;h4 id=&quot;怎么让key唯一，可以用数组的下标吗&quot;&gt;&lt;a href=&quot;#怎么让key唯一，可以用数组的下标吗&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="前端思考" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E6%80%9D%E8%80%83/"/>
    
    
  </entry>
  
  <entry>
    <title>http/http2</title>
    <link href="http://yoursite.com/2018/05/14/http-http2/"/>
    <id>http://yoursite.com/2018/05/14/http-http2/</id>
    <published>2018-05-14T14:50:30.000Z</published>
    <updated>2018-12-04T07:52:45.677Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-images.githubusercontent.com/14144617/39578857-e51f2f4e-4f17-11e8-9264-c07f766950af.png" alt="image"></p><p>http:<br><a href="https://hit-alibaba.github.io/interview/basic/network/HTTP.html" target="_blank" rel="noopener">https://hit-alibaba.github.io/interview/basic/network/HTTP.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14144617/39578857-e51f2f4e-4f17-11e8-9264-c07f766950af.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;http:
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>项目总结</title>
    <link href="http://yoursite.com/2018/05/14/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/05/14/项目总结/</id>
    <published>2018-05-14T14:48:36.000Z</published>
    <updated>2019-03-21T09:51:50.736Z</updated>
    
    <content type="html"><![CDATA[<h3 id="车险项目"><a href="#车险项目" class="headerlink" title="车险项目"></a>车险项目</h3><p>banner轮播图: react-swipeable-views</p><p>let authCounts = (auths.creditcard + auths.houseFundAuth + auths.shebaoAuth + auths.employeeProof).match(/0/g);判断有多少个值为0</p><h4 id="兼容性问题"><a href="#兼容性问题" class="headerlink" title="兼容性问题"></a>兼容性问题</h4><p>oppo 手机自带浏览器跳转页面回来store.session没有存储到，可能开了隐私模式</p><h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><h5 id="单行溢出省略"><a href="#单行溢出省略" class="headerlink" title="单行溢出省略"></a>单行溢出省略</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">overflow: hidden;</span><br><span class="line">text-overflow:ellipsis;</span><br><span class="line">white-space: nowrap;</span><br></pre></td></tr></table></figure><h5 id="多行溢出省略"><a href="#多行溢出省略" class="headerlink" title="多行溢出省略"></a>多行溢出省略</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">display: -webkit-box;</span><br><span class="line">-webkit-box-orient: vertical;</span><br><span class="line">-webkit-line-clamp: 3;</span><br><span class="line">overflow: hidden;</span><br></pre></td></tr></table></figure><h4 id="ios穿透问题"><a href="#ios穿透问题" class="headerlink" title="ios穿透问题"></a>ios穿透问题</h4><p>在蒙层的touchmove的时候加个阻止事件<br>document.getElementById(‘modal’).addEventListener(‘touchmove’, (e) =&gt; { e.preventDefault(); });</p><h4 id="iPhone滑动卡顿"><a href="#iPhone滑动卡顿" class="headerlink" title="iPhone滑动卡顿"></a>iPhone滑动卡顿</h4><p>-webkit-overflow-scrolling: touch;</p><h4 id="解决1px兼容性问题"><a href="#解决1px兼容性问题" class="headerlink" title="解决1px兼容性问题"></a>解决1px兼容性问题</h4><p>.thinline{<br>  position: absolute;<br>  bottom: 0;<br>  left: 0;<br>  width: 100%;<br>  height: 2Px;<br>  overflow: hidden;<br>  &amp;:before{<br>    content: ‘’;<br>    position: absolute;<br>    left: 0;<br>    top: 0;<br>    background-color: #EAEAEA;<br>    width: 100%;<br>    height: 1Px;<br>    -webkit-transform: scaleY(0.5);<br>    transform: scaleY(0.5);<br>    -webkit-transform-origin: 0 0;<br>    transform-origin: 0 0;<br>  }<br>}</p><p>  background-color: #EAEAEA;，用background在iphone5s会模糊</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;车险项目&quot;&gt;&lt;a href=&quot;#车险项目&quot; class=&quot;headerlink&quot; title=&quot;车险项目&quot;&gt;&lt;/a&gt;车险项目&lt;/h3&gt;&lt;p&gt;banner轮播图: react-swipeable-views&lt;/p&gt;
&lt;p&gt;let authCounts = (auth
      
    
    </summary>
    
      <category term="项目总结" scheme="http://yoursite.com/categories/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>性能优化</title>
    <link href="http://yoursite.com/2018/05/14/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/05/14/性能优化/</id>
    <published>2018-05-14T14:17:36.000Z</published>
    <updated>2019-03-21T08:18:18.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="监控性能"><a href="#监控性能" class="headerlink" title="监控性能"></a>监控性能</h3><p>window.performance</p><p>DNS解析时间： domainLookupEnd - domainLookupStart<br>TCP建立连接时间： connectEnd - connectStart<br>白屏时间： responseStart - navigationStart<br>dom渲染完成时间： domContentLoadedEventEnd - navigationStart<br>页面onload时间： loadEventEnd - navigationStart</p><p><a href="http://www.alloyteam.com/2015/09/explore-performance/" target="_blank" rel="noopener">http://www.alloyteam.com/2015/09/explore-performance/</a></p><h3 id="React-性能优化"><a href="#React-性能优化" class="headerlink" title="React 性能优化"></a>React 性能优化</h3><p><a href="https://doc.react-china.org/docs/optimizing-performance.html" target="_blank" rel="noopener">https://doc.react-china.org/docs/optimizing-performance.html</a></p><p>1.webpack 压缩代码  webpack.optimize.UglifyJsPlugin<br>2.shouldComponentUpdate(nextProps, nextState),pureComponent<br>3.Immutable.js<br>4.dll打包，webpack.DllReferencePlugin<br>将静态资源文件（运行依赖包）与源文件分开打包，先使用DllPlugin给静态资源打包，再使用DllReferencePlugin让源文件引用资源文件。<br>5.react-loadable  <a href="https://reacttraining.com/react-router/web/guides/code-splitting" target="_blank" rel="noopener">https://reacttraining.com/react-router/web/guides/code-splitting</a></p><h3 id="vue性能优化"><a href="#vue性能优化" class="headerlink" title="vue性能优化"></a>vue性能优化</h3><p><a href="https://www.jianshu.com/p/40b04701c571" target="_blank" rel="noopener">https://www.jianshu.com/p/40b04701c571</a></p><p>keep-alive，dll打包，ngnix gzip压缩及缓存<br>路由使用异步组件<br>component: (resolve) =&gt; require([./app/dss], resolve)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;监控性能&quot;&gt;&lt;a href=&quot;#监控性能&quot; class=&quot;headerlink&quot; title=&quot;监控性能&quot;&gt;&lt;/a&gt;监控性能&lt;/h3&gt;&lt;p&gt;window.performance&lt;/p&gt;
&lt;p&gt;DNS解析时间： domainLookupEnd - domainLoo
      
    
    </summary>
    
      <category term="web前端" scheme="http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="web前端" scheme="http://yoursite.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
